import streamlit as st
from zeep import Client
from zeep.helpers import serialize_object

st.set_page_config(page_title="Ticimax ÃœrÃ¼n Ã‡ek", layout="wide")

st.title("ğŸ“¦ Ticimax ÃœrÃ¼nlerini Panele YÃ¼kle")

# Yetki kodu ve servis adresi
UYE_KODU = "HVEKN1KK1USEAD0VAXTVKP8FWGN3AE"
SERVICE_URL = "https://www.ofis26.com/Servis/UrunServis.svc?wsdl"

try:
    client = Client(wsdl=SERVICE_URL)
    st.success("Servis baÄŸlantÄ±sÄ± baÅŸarÄ±lÄ±.")
except Exception as e:
    st.error(f"Servis baÄŸlantÄ±sÄ± baÅŸarÄ±sÄ±z: {e}")
    st.stop()

# ÃœrÃ¼nleri Ã§ek
if st.button("ğŸ”„ Ticimax'tan ÃœrÃ¼nleri Al"):
    try:
        response = client.service.SelectUrun(
            UyeKodu=UYE_KODU,
            f={},
            s={
                "BaslangicIndex": 0,
                "KayitSayisi": 5,
                "KayitSayisinaGoreGetir": True,
                "SiralamaDegeri": "",
                "SiralamaYonu": ""
            }
        )
        if not response:
            st.warning("HiÃ§ Ã¼rÃ¼n bulunamadÄ±.")
        else:
            st.success(f"{len(response)} Ã¼rÃ¼n baÅŸarÄ±yla Ã§ekildi.")
            for idx, urun in enumerate(response, 1):
                st.markdown(f"### {idx}. ÃœrÃ¼n")
                if urun is None:
                    st.warning("Bu Ã¼rÃ¼n None dÃ¶ndÃ¼, atlanÄ±yor.")
                    continue

                u = serialize_object(urun)
                if not isinstance(u, dict):
                    st.warning("Veri formatÄ± beklenen ÅŸekilde deÄŸil.")
                    continue

                st.json(u)

    except Exception as e:
        st.error(f"Hata oluÅŸtu: {e}")
